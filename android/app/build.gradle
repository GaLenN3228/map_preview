def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// The Google Api Key value is taken from the local.properties file.
// This file must be kept secret.
def apiKey = localProperties.getProperty('GOOGLE_API_KEY')

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    // These keys are for publishing to the Play Market and taken from the key.properties file.
    // This file must be kept secret.
    def keyProps = new Properties()
    def keyPropsFile = rootProject.file('key.properties')
    if (keyPropsFile.exists()) {
        keyProps.load(new FileInputStream(keyPropsFile))
    }

    defaultConfig {
        applicationId "com.simplecode.map_flutter"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // This structure is needed so that there is access to the Google API Key value inside the AndroidManifest.xml file.
        manifestPlaceholders += [
                GOOGLE_API_KEY: apiKey
        ]

        // The Yandex API Key value is taken from the local.properties and generated inside class BuildConfig.java.
        // That is for keeping secret key.
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "YANDEX_API_KEY", "\"${properties.getProperty("YANDEX_API_KEY")}\""
    }

    // The keys are from the key.properties file.
    signingConfigs {
        release {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storeFile file('simplecode-map.jks')
            storePassword keyProps['storePassword']
        }
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.yandex.android:maps.mobile:4.2.2-full'
}

configurations {
    all*.exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-telemetry'
}
